// AUTOGENERATED FILE

//go:build !codeanalysis

package model

import "github.com/google/uuid"

type FunctionExecution struct {
	Id          *uuid.UUID               `json:"id,omitempty"`
	Function    *Function                `json:"function,omitempty"`
	Input       interface{}              `json:"input,omitempty"`
	Output      interface{}              `json:"output,omitempty"`
	Error       interface{}              `json:"error,omitempty"`
	Status      *FunctionExecutionStatus `json:"status,omitempty"`
	Annotations map[string]string        `json:"annotations,omitempty"`
	Version     int32                    `json:"version,omitempty"`
}

func (s *FunctionExecution) GetId() *uuid.UUID {
	return s.Id
}
func (s *FunctionExecution) GetFunction() *Function {
	return s.Function
}
func (s *FunctionExecution) GetInput() interface{} {
	return s.Input
}
func (s *FunctionExecution) GetOutput() interface{} {
	return s.Output
}
func (s *FunctionExecution) GetError() interface{} {
	return s.Error
}
func (s *FunctionExecution) GetStatus() *FunctionExecutionStatus {
	return s.Status
}
func (s *FunctionExecution) GetAnnotations() map[string]string {
	return s.Annotations
}
func (s *FunctionExecution) GetVersion() int32 {
	return s.Version
}

type FunctionExecutionStatus string

const (
	FunctionExecutionStatus_Pending FunctionExecutionStatus = "pending"
	FunctionExecutionStatus_Success FunctionExecutionStatus = "success"
	FunctionExecutionStatus_Error   FunctionExecutionStatus = "error"
)
