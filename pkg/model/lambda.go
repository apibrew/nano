// AUTOGENERATED FILE

//go:build !codeanalysis

package model

import "github.com/google/uuid"
import "time"

type Lambda struct {
	Id                   *uuid.UUID        `json:"id,omitempty"`
	Package              string            `json:"package,omitempty"`
	Name                 string            `json:"name,omitempty"`
	EventSelectorPattern string            `json:"eventSelectorPattern,omitempty"`
	Function             *Function         `json:"function,omitempty"`
	Annotations          map[string]string `json:"annotations,omitempty"`
	CreatedBy            *string           `json:"createdBy,omitempty"`
	UpdatedBy            *string           `json:"updatedBy,omitempty"`
	CreatedOn            *time.Time        `json:"createdOn,omitempty"`
	UpdatedOn            *time.Time        `json:"updatedOn,omitempty"`
	Version              int32             `json:"version,omitempty"`
}

func (s *Lambda) GetId() *uuid.UUID {
	return s.Id
}
func (s *Lambda) GetPackage() string {
	return s.Package
}
func (s *Lambda) GetName() string {
	return s.Name
}
func (s *Lambda) GetEventSelectorPattern() string {
	return s.EventSelectorPattern
}
func (s *Lambda) GetFunction() *Function {
	return s.Function
}
func (s *Lambda) GetAnnotations() map[string]string {
	return s.Annotations
}
func (s *Lambda) GetCreatedBy() *string {
	return s.CreatedBy
}
func (s *Lambda) GetUpdatedBy() *string {
	return s.UpdatedBy
}
func (s *Lambda) GetCreatedOn() *time.Time {
	return s.CreatedOn
}
func (s *Lambda) GetUpdatedOn() *time.Time {
	return s.UpdatedOn
}
func (s *Lambda) GetVersion() int32 {
	return s.Version
}
