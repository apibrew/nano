// AUTOGENERATED FILE

//go:build !codeanalysis

package model

import "github.com/google/uuid"
import "time"

type Function struct {
	Id          *uuid.UUID               `json:"id,omitempty"`
	Package     string                   `json:"package,omitempty"`
	Name        string                   `json:"name,omitempty"`
	Script      *string                  `json:"script,omitempty"`
	Module      *Module                  `json:"module,omitempty"`
	Engine      *FunctionExecutionEngine `json:"engine,omitempty"`
	Options     *FunctionOptions         `json:"options,omitempty"`
	Args        []FunctionArgument       `json:"args,omitempty"`
	Annotations map[string]string        `json:"annotations,omitempty"`
	CreatedBy   *string                  `json:"createdBy,omitempty"`
	UpdatedBy   *string                  `json:"updatedBy,omitempty"`
	CreatedOn   *time.Time               `json:"createdOn,omitempty"`
	UpdatedOn   *time.Time               `json:"updatedOn,omitempty"`
	Version     int32                    `json:"version,omitempty"`
}

func (s *Function) GetId() *uuid.UUID {
	return s.Id
}
func (s *Function) GetPackage() string {
	return s.Package
}
func (s *Function) GetName() string {
	return s.Name
}
func (s *Function) GetScript() *string {
	return s.Script
}
func (s *Function) GetModule() *Module {
	return s.Module
}
func (s *Function) GetEngine() *FunctionExecutionEngine {
	return s.Engine
}
func (s *Function) GetOptions() *FunctionOptions {
	return s.Options
}
func (s *Function) GetArgs() []FunctionArgument {
	return s.Args
}
func (s *Function) GetAnnotations() map[string]string {
	return s.Annotations
}
func (s *Function) GetCreatedBy() *string {
	return s.CreatedBy
}
func (s *Function) GetUpdatedBy() *string {
	return s.UpdatedBy
}
func (s *Function) GetCreatedOn() *time.Time {
	return s.CreatedOn
}
func (s *Function) GetUpdatedOn() *time.Time {
	return s.UpdatedOn
}
func (s *Function) GetVersion() int32 {
	return s.Version
}

type FunctionOptions struct {
	NamedParams *bool `json:"namedParams,omitempty"`
}

func (s *FunctionOptions) GetNamedParams() *bool {
	return s.NamedParams
}

type FunctionArgument struct {
	Name  string  `json:"name,omitempty"`
	Label *string `json:"label,omitempty"`
}

func (s *FunctionArgument) GetName() string {
	return s.Name
}
func (s *FunctionArgument) GetLabel() *string {
	return s.Label
}
