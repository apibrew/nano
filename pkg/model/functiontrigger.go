// AUTOGENERATED FILE

//go:build !codeanalysis

package model

import "github.com/google/uuid"
import "time"

type FunctionTrigger struct {
	Id          *uuid.UUID            `json:"id,omitempty"`
	Name        string                `json:"name,omitempty"`
	Resource    string                `json:"resource,omitempty"`
	Namespace   string                `json:"namespace,omitempty"`
	Action      FunctionTriggerAction `json:"action,omitempty"`
	Order       *FunctionTriggerOrder `json:"order,omitempty"`
	Async       bool                  `json:"async,omitempty"`
	Function    *Function             `json:"function,omitempty"`
	Annotations map[string]string     `json:"annotations,omitempty"`
	CreatedBy   *string               `json:"createdBy,omitempty"`
	UpdatedBy   *string               `json:"updatedBy,omitempty"`
	CreatedOn   *time.Time            `json:"createdOn,omitempty"`
	UpdatedOn   *time.Time            `json:"updatedOn,omitempty"`
	Version     int32                 `json:"version,omitempty"`
}

func (s *FunctionTrigger) GetId() *uuid.UUID {
	return s.Id
}
func (s *FunctionTrigger) GetName() string {
	return s.Name
}
func (s *FunctionTrigger) GetResource() string {
	return s.Resource
}
func (s *FunctionTrigger) GetNamespace() string {
	return s.Namespace
}
func (s *FunctionTrigger) GetAction() FunctionTriggerAction {
	return s.Action
}
func (s *FunctionTrigger) GetOrder() *FunctionTriggerOrder {
	return s.Order
}
func (s *FunctionTrigger) GetAsync() bool {
	return s.Async
}
func (s *FunctionTrigger) GetFunction() *Function {
	return s.Function
}
func (s *FunctionTrigger) GetAnnotations() map[string]string {
	return s.Annotations
}
func (s *FunctionTrigger) GetCreatedBy() *string {
	return s.CreatedBy
}
func (s *FunctionTrigger) GetUpdatedBy() *string {
	return s.UpdatedBy
}
func (s *FunctionTrigger) GetCreatedOn() *time.Time {
	return s.CreatedOn
}
func (s *FunctionTrigger) GetUpdatedOn() *time.Time {
	return s.UpdatedOn
}
func (s *FunctionTrigger) GetVersion() int32 {
	return s.Version
}

type FunctionTriggerAction string

const (
	FunctionTriggerAction_Create FunctionTriggerAction = "create"
	FunctionTriggerAction_Update FunctionTriggerAction = "update"
	FunctionTriggerAction_Delete FunctionTriggerAction = "delete"
	FunctionTriggerAction_List   FunctionTriggerAction = "list"
	FunctionTriggerAction_Get    FunctionTriggerAction = "get"
)

type FunctionTriggerOrder string

const (
	FunctionTriggerOrder_Before  FunctionTriggerOrder = "before"
	FunctionTriggerOrder_After   FunctionTriggerOrder = "after"
	FunctionTriggerOrder_Instead FunctionTriggerOrder = "instead"
)
